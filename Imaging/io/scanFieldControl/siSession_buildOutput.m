function siSession_buildOutput
	global state focusOutput grabOutput

% setups components of AO Objects that are config independent
    if state.analysisMode
        return
	end

% Mirror Output (FOCUS)
	focusOutput=daq.createSession('ni');
    focusOutput.Rate=state.acq.outputRate;
    state.acq.actualOutputRate=focusOutput.Rate;
    if state.acq.actualOutputRate~=state.acq.outputRate
        disp('*** siSession_buildOutput : Desired output rate not achieved')
        disp(['    acutal rate is ' num2str(state.acq.actualOutputRate)]);
    end
 
    % output channel for X scan
    ch=focusOutput.addAnalogOutputChannel(...
        state.imaging.daq.scanOutputBoard, ...
        ['ao' num2str(state.imaging.daq.XMirrorChannelIndex)],...
        'Voltage'...
        );
    ch.Range=[-10 10];

    % output channel for Y scan
    ch=focusOutput.addAnalogOutputChannel(...
        state.imaging.daq.scanOutputBoard, ...
        ['ao' num2str(state.imaging.daq.YMirrorChannelIndex)],...
        'Voltage'...
        );
    ch.Range=[-10 10];
    
    % will be triggered by the input board
    focusOutput.addTriggerConnection(...
        'external', ...
        [state.imaging.daq.inputBoard '/RTSI0'], ...
        'StartTrigger'...
        );

    focusOutput.addlistener('DataRequired', @siSession_focus_queueData);
   	focusOutput.IsContinuous=1;

    
% Mirror Output  (GRAB)
	grabOutput=daq.createSession('ni');
    grabOutput.Rate=state.acq.actualOutputRate;
 
    % output channel for X scan
    ch=grabOutput.addAnalogOutputChannel(...
        state.imaging.daq.scanOutputBoard, ...
        ['ao' num2str(state.imaging.daq.XMirrorChannelIndex)],...
        'Voltage'...
        );
    ch.Range=[-10 10];

    % output channel for Y scane
    ch=grabOutput.addAnalogOutputChannel(...
        state.imaging.daq.scanOutputBoard, ...
        ['ao' num2str(state.imaging.daq.YMirrorChannelIndex)],...
        'Voltage'...
        );
    ch.Range=[-10 10];
    
    % will be triggered by the input board
    grabOutput.addTriggerConnection(...
        'external', ...
        [state.imaging.daq.inputBoard '/RTSI0'], ...
        'StartTrigger'...
        );

    % provide a clock signal that will drive the Aux Board
    grabOutput.addClockConnection(...
        [state.imaging.daq.scanOutputBoard '/RTSI5'], ...
        'external', ...
        'ScanClock'...
        );

    grabOutput.addlistener('DataRequired', @siSession_grab_queueData);
				
 
	if state.pcell.pcellOn	% if using pockel cells
		for counter=1:state.pcell.numberOfPcells % add the lower channels for the pcells
            ch=focusOutput.addAnalogOutputChannel(...
                state.pcell.pcellBoard, ...
                ['ao' num2str(counter-1)],...
                'Voltage'...
                );
            ch.Range=[-10 10];
        end

        for counter=1:state.pcell.numberOfPcells % add another set of channels for the shutters
            ch=focusOutput.addAnalogOutputChannel(...
                state.pcell.pcellBoard, ...
                ['ao' num2str(counter-1+state.pcell.numberOfPcells)],...
                'Voltage'...
                );
            ch.Range=[-10 10];
        end
        

        % provide a clock signal that will drive the Aux Board
        focusOutput.addClockConnection(...
            'external', ...
scorein            [state.imaging.daq.scanOutputBoard '/RTSI5'], ...
            'ScanClock'...
            );

    end
    
