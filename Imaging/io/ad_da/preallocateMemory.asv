function preallocateMemory
	global state

	% This function Preallocates the appropriate memory for each acquisition mode.
	%
	% Written by: Thomas Pologruto and Bernardo Sabatini
	% Cold Spring Harbor Labs
	% February 1, 2001

	if state.acq.dualLaserMode==1   % lasers go simulataneously therefor one image window per laser
		channelList=1:state.init.maximumNumberOfInputChannels;
	else
		channelList=[1:state.init.maximumNumberOfInputChannels 11:10+state.init.maximumNumberOfInputChannels];
	end
	
	if ~iscell(state.acq.maxData)
		state.acq.maxData = cell(1,10+state.init.maximumNumberOfInputChannels);
	end
	imageData = cell(1,10+state.init.maximumNumberOfInputChannels);
	
	global lastAcquiredFrame
	
	for channelCounter = channelList
		inputChannelCounter=mod(channelCounter, 10);
		if getfield(state.acq, ['acquiringChannel' num2str(inputChannelCounter)])			% BSMOD 1/18/2 - removed eval for channelOn
			lastAcquiredFrame{channelCounter} = zeros(state.acq.linesPerFrame, state.acq.pixelsPerLine);
			
			if state.internal.keepAllSlicesInMemory==0
				sliceFactor=1;
			else
				sliceFactor=state.acq.numberOfZSlices;
			end
			
			if state.acq.averaging==1
				frameFactor=1;
			else
				frameFactor=state.acq.numberOfFrames;
			end
			
			imageData{channelCounter}=zeros(...
				state.acq.linesPerFrame, ...	% Y
				state.acq.pixelsPerLine, ...	% X
				frameFactor*sliceFactor);		% Z
			
			if getfield(state.acq, ['maxImage' num2str(inputChannelCounter)])
				if (size(state.acq.maxData{channelCounter}, 1) ~= state.acq.linesPerFrame) |  ...
						(size(state.acq.maxData{channelCounter}, 2) ~= state.acq.pixelsPerLine)
					state.acq.maxData{channelCounter} = zeros(state.acq.linesPerFrame, state.acq.pixelsPerLine);
				end
			end
		else
			imageData{channelCounter}=[];
			lastAcquiredFrame{channelCounter}=[];
		end
	end
	
	if any(size(state.acq.compositeData)~=[state.acq.linesPerFrame state.acq.pixelsPerLine 3])
		state.acq.compositeData = (zeros(state.acq.linesPerFrame, state.acq.pixelsPerLine, 3));
	end

