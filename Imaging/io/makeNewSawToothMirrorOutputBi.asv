function makeNewSawToothMirrorOutputBi
	global state
	global grabOutput

	actualOutputRate = get(grabOutput, 'SampleRate');
	state.internal.lengthOfXData = actualOutputRate*state.acq.msPerLine/1000;
	state.internal.lineDelay = state.acq.lineDelay/state.acq.msPerLine;
	state.internal.flybackDecimal= 1-state.acq.fillFraction;
	
	state.internal.startOutputFractionInLine=(1-state.acq.fillFraction)/2;
	state.internal.endOutputFractionInLine=state.internal.startOutputFractionInLine+state.acq.fillFraction;
	
	state.internal.startOutputColumnInLine=round(state.internal.lengthOfXData*state.internal.startOutputFractionInLine)+1;
	state.internal.endOutputColumnInLine=round(state.internal.lengthOfXData*state.internal.endOutputFractionInLine)+1;
	
	oneSinWaveLin=zeros(1, state.internal.lengthOfXData);
	x0=state.internal.startOutputColumnInLine;
	x1=state.internal.endOutputColumnInLine;
	oneSinWaveLin(1:x0)=-1;
	oneSinWaveLin(x1:end)=1;
	oneSinWaveLin(x0:x1)=linspace(-1, 1, x1-x0+1);

	oneSinWaveLin=[oneSinWaveLin fliplr(oneSinWaveLin)];
	
	state.internal.start2=x0;
	state.internal.end2=x1;
	
	if state.acq.dualLaserMode==2
		extraLinesFactor=2;
	else
		extraLinesFactor=1;
	end
	
	figure; plot(oneSinWaveLin)
 	state.acq.rawSawtoothMirrorOutput=repmat(-oneSinWaveLin, 1, extraLinesFactor*state.acq.linesPerFrame/2)';
	
	y=reshape(repmat(linspace(-1,1,extraLinesFactor*state.acq.linesPerFrame),state.internal.lengthOfXData,1),1,extraLinesFactor*state.internal.lengthOfXData*state.acq.linesPerFrame);
	
	y2=[y(state.internal.start1 : state.internal.lengthOfXData*extraLinesFactor*state.acq.linesPerFrame+1-state.internal.start1) repmat(-1, 1, 2*state.internal.start1-2)];
	state.acq.rawSawtoothMirrorOutput(:,2)=y2';
	
% 	global grabInput
% 	actualInputRate = get(grabInput, 'SampleRate');
% 	
% 	if state.acq.bidi
% 		state.internal.startDataColumnInLine = ...
% 			round((state.acq.lineDelay/2+state.acq.mirrorLag)/state.acq.msPerLine*state.internal.samplesPerLine);
% 		state.internal.endDataColumnInLine = state.internal.startDataColumnInLine + (state.acq.samplesAcquiredPerLine-1);	
% 	else
% 		state.internal.startDataColumnInLine = ...
% 			round((state.acq.lineDelay+state.acq.mirrorLag)/state.acq.msPerLine*state.internal.samplesPerLine);
% 		state.internal.endDataColumnInLine = state.internal.startDataColumnInLine + (state.acq.samplesAcquiredPerLine-1);	
% 	end	
	